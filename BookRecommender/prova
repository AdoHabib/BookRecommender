# Università degli studi Insubria 

# "BOOK RECOMMENDER" - 

# USER MANUAL 

**Autori:**  
- Mouhammad Toure 
- Daniel Viny Kamdem Tagne 
- Agnes Balkaire Makouwe 

**Progetto Laboratorio A: BookRecommender**  

**Anno accademico: 2023/2024**

---

## Sommario 
1. [Introduzione](#1-introduzione)
2. [Installazione](#2-installazione)
3. [Configurazione del Database](#3-configurazione-del-database)
4. [Esecuzione ed uso](#4-esecuzione-ed-uso)
5. [Troubleshooting](#5-troubleshooting)
6. [Sitografia](#6-sitografia)
7. [Bibliografia](#7-bibliografia)

---

## 1. Introduzione

Il programma Book Recommender è progettato per aiutare gli utenti a trovare libri consigliati in base alle loro preferenze, che tu sia un utente registrato o no. Il programma offre funzionalità diverse per migliorare la tua esperienza di lettura.

Attraverso un sistema di ricerca intuitivo e accessibile a tutti, è possibile scoprire facilmente nuovi libri che corrispondono ai tuoi gusti letterari. Book Recommender rende la scoperta di nuovi libri e la consultazione delle recensioni un processo semplice e piacevole, rendendo la lettura un'attività più coinvolgente e informata.

### 1.1 Funzionamento generale dell'applicazione

L'applicazione Book Recommender utilizza un'architettura client-server basata su Java RMI (Remote Method Invocation) che permette a più utenti di utilizzare il sistema contemporaneamente. Ogni client ha una sessione indipendente, garantendo che le operazioni di un utente non interferiscano con quelle degli altri.

**Caratteristiche principali:**
- **Sistema multi-utente**: 
Ogni client ha una sessione univoca identificata da un Session ID generata in modo automatico 

- **Isolamento delle sessioni**: 
Gli utenti non possono accedere ai dati di altri utenti per sicurezza e per garantire l'integrità dei dati

- **Database PostgreSQL**: 
Tutti i dati sono memorizzati in un database relazionale sicuro creato  e popolato in modo automatico al primo avvio del programma (cliccando due volte su run_all.bat). Si puo anche inizializzare il database manualmente (cliccando due volte su setup_database.bat)

- **Concorrenza**: 
Più utenti possono utilizzare il sistema simultaneamente. Il programma garantisce l'accesso concorrente ai dati senza che un utente possa accedere ai dati di un altro utente

- **Setup automatico**: 
Configurazione semplificata del database tramite DatabaseInitializer e del sistema tramite run_all.bat

### 1.2 Strutture dati utilizzate

Il sistema utilizza un database PostgreSQL per la gestione dei dati, che include le seguenti tabelle:

- **userid**: Credenziali degli utenti registrati
- **libri**: Catalogo dei libri disponibili
- **valutazioni**: Valutazioni degli utenti sui libri
- **consigli**: Raccomandazioni di libri tra utenti
- **librerie**: Librerie personali degli utenti

**NOTA**: Per garantire il corretto funzionamento di tutte le funzionalità dell'applicazione, è fondamentale non modificare manualmente i dati del database. Utilizzare esclusivamente l'applicazione per interagire con i dati, assicurando così la coerenza e la sicurezza delle informazioni memorizzate.

---

## 2. Installazione
Il programma Book Recommender è scritto utilizzando il linguaggio di programmazione Java. Sarà 
quindi necessario verificare e installare la versione corretta di Java sul proprio dispositivo per 
garantire il corretto funzionamento dell'applicazione. Assicuratevi di avere installato la versione 
richiesta di Java Runtime Environment (JRE) o Java Development Kit (JDK) per poter eseguire il 
programma senza problemi
BookRecommender include un sistema di installazione completamente automatizzato che configura tutto 
ciò che serve per far funzionare l'applicazione. Il processo di setup è stato semplificato con 
script automatici che gestiscono compilazione, database e avvio del sistema.

### 2.1 Requisiti di Sistema
L'applicazione Book Recommender è stata programmata su un dispositivo con sistema operativo Windows 11. Per garantire il corretto funzionamento del programma, è consigliabile utilizzare un sistema operativo compatibile.

**Sistemi operativi supportati:**
- Windows 10/11 (raccomandato)
- macOS Big Sur (versione 11.7.6 e successive)
- Linux (Ubuntu 20.04+)

### 2.2 Prerequisiti Necessari

Prima di iniziare l'installazione, assicurati di avere installato:

#### Java 17 o superiore
L'applicazione è stata sviluppata con Java 17. È necessario avere Java Development Kit (JDK) installato.

**Per verificare la versione di Java:**
```bash
java -version
javac -version
```

**Scarica Java dal sito ufficiale:**
- [Oracle JDK](https://www.oracle.com/java/technologies/downloads/)
- [OpenJDK](https://adoptium.net/) (gratuito, raccomandato)

#### PostgreSQL 12+
Il sistema utilizza PostgreSQL come database.

**Installazione PostgreSQL:**
1. Scaricare da [postgresql.org](https://www.postgresql.org/download/)
2. Durante l'installazione, impostare una password per l'utente 'postgres'
3. Avviare il servizio PostgreSQL

**IMPORTANTE**: Il database 'bookrecommender' verrà creato automaticamente dal sistema.

### 2.3 Setup Automatico Completo

Il progetto include `run_all.bat` che esegue automaticamente:
- Pulizia dei file precedenti
- Compilazione del progetto  
- Creazione automatica del database
- Popolamento con i libri (se il database è vuoto / per il primo avvio del sistema)
- Avvio del server
- Avvio del client

#### Metodo Raccomandato - Esecuzione Automatica
```bash
# Da PowerShell
.\run_all.bat

# Da CMD (Prompt dei Comandi)
run_all.bat

# Oppure doppio click sul file run_all.bat
Fare un doppio click sul file run_all.bat per configurare ed eseguire il sistema automaticamente
```

#### Metodo Alternativo - Setup Manuale Passo-Passo
Se preferisci controllare ogni passaggio:

0. **Pulizia:**
   ```bash
   .\clean.bat
   ```

1. **Compilazione:**
   ```bash
   .\compile.bat
   ```

2. **Setup Database:**
   ```bash
   .\setup_database.bat
   ```

3. **Popolamento Database:**
   ```bash
   .\populate_db.bat
   ```

4. **Avvio Sistema:**
   ```bash
   .\start_server.bat    # In una finestra
   .\start_client.bat    # In un'altra finestra con possibilità di avviare piu utenti 
   ```

### 2.4 File Inclusi

Il progetto include tutti i file necessari:
- **Driver JDBC PostgreSQL** (`lib/postgresql-42.7.5.jar`) 
- già incluso e permette di conettersi al database
- **Dati dei libri** (`dati/BooksDatasetClean.csv`) 
- già incluso, file da cui caricare i libri nel database
- **Script di automazione** 
- già configurati con il file run_all.bat
- **Configurazione manuale**
- si puo anche configurare manualmente il programma:
    1. Pulire con clean.bat
    2. Compilare con compile.bat
    3. Inizializzare il database con setup_database.bat
    4. Popolare il database con i libri, populate_db.bat
    5. Avviare il server con start_server.bat
    6. Avviare il cliente con start_vlient.bat

**NON È NECESSARIO** scaricare manualmente driver o dati aggiuntivi se necessario.

---

## 3. Configurazione del Database
Il progetto include una classe `DatabaseInitializer` che automatizza completamente la configurazione del database.

### 3.1 Configurazione Automatica (Inclusa in run_all.bat)
Il sistema include una configurazione del database completamente automatizzata. Quando esegui `run_all.bat`, 
il sistema si occupa automaticamente di:

1. **Creare il database** 'bookrecommender' se non esiste
2. **Creare tutte le tabelle** necessarie (userid, libri, valutazioni, consigli, librerie)
3. **Popolare il database** con oltre 66.000 libri (solo se il database è vuoto / il primo avvio)
4. **Verificare la connessione** testa la connessione al database e l'integrità dei dati

### 3.2 Setup Manuale del Database (Opzionale)
Se preferisci configurare il database separatamente:

#### Metodo 1: Script Specifico per Database
```bash
.\setup_database.bat
```

#### Metodo 2: Solo Popolamento Libri
```bash
.\populate_db.bat
```

#### Metodo 3: Comando Manuale
```bash
java -cp "bin;lib/*" bookrecommender.DatabaseInitializer
```

### 3.3 Opzioni di Configurazione Database

Lo script `setup_database.bat` offre le seguenti opzioni:

1. **Initialize database only** - Crea database e tabelle
2. **Test database connection** - Verifica connessione PostgreSQL
3. **Show database information** - Mostra statistiche database
4. **Exit** - Esce dal setup

### 3.4 Gestione Intelligente del Popolamento
Lo script `populate_db.bat` permette di inserire libri nel database.
Il sistema include una logica intelligente per il popolamento:

- **Database vuoto**: Popola automaticamente con tutti i libri
- **Database esistente**: Salta il popolamento per evitare duplicazioni
- **Controllo automatico**: Verifica il numero di libri presenti

**Messaggio tipico:**
```
🔍 Numero di libri nel database: 66313
📚 Il database contiene già dei libri.
ℹ️ Popolamento saltato per evitare duplicazioni e perdita tempo.
```

### 3.4 Struttura del Database

Il sistema crea automaticamente le seguenti tabelle:

#### Tabella `userid`
```sql
CREATE TABLE userid (
    nome_cognome VARCHAR(100) NOT NULL,
    codice_fiscale VARCHAR(16) NOT NULL,
    email VARCHAR(100) UNIQUE NOT NULL,
    userid VARCHAR(50) PRIMARY KEY,
    password VARCHAR(256) NOT NULL
);
```

#### Tabella `libri`
```sql
CREATE TABLE libri (
    titolo VARCHAR(100) PRIMARY KEY,
    autore VARCHAR(100) NOT NULL,
    genere VARCHAR(50) NOT NULL,
    editore VARCHAR(100) NOT NULL,
    anno INT NOT NULL
);
```

#### Tabella `valutazioni`
```sql
CREATE TABLE valutazioni (
    userid VARCHAR(50) NOT NULL,
    titolo_libro VARCHAR(500) NOT NULL,
    stile INT NOT NULL CHECK (stile >= 1 AND stile <= 5),
    contenuto INT NOT NULL CHECK (contenuto >= 1 AND contenuto <= 5),
    gradevolezza INT NOT NULL CHECK (gradevolezza >= 1 AND gradevolezza <= 5),
    originalita INT NOT NULL CHECK (originalita >= 1 AND originalita <= 5),
    edizione INT NOT NULL CHECK (edizione >= 1 AND edizione <= 5),
    voto_finale FLOAT NOT NULL,
    PRIMARY KEY (userid, titolo_libro),
    FOREIGN KEY (userid) REFERENCES userid(userid) ON DELETE CASCADE,
    FOREIGN KEY (titolo_libro) REFERENCES libri(titolo) ON DELETE CASCADE
);
```

#### Tabella `consigli`
```sql
CREATE TABLE consigli (
    userid VARCHAR(50) NOT NULL,
    libro_referenziale VARCHAR(500) NOT NULL,
    libro_consigliato VARCHAR(500) NOT NULL,
    FOREIGN KEY (userid) REFERENCES userid(userid) ON DELETE CASCADE,
    FOREIGN KEY (libro_referenziale) REFERENCES libri(titolo) ON DELETE CASCADE,
    FOREIGN KEY (libro_consigliato) REFERENCES libri(titolo) ON DELETE CASCADE
);
```

#### Tabella `librerie`
```sql
CREATE TABLE librerie (
    id SERIAL PRIMARY KEY,
    userid VARCHAR(50) NOT NULL,
    nome_libreria VARCHAR(100) NOT NULL,
    libro VARCHAR(500),
    UNIQUE(userid, nome_libreria, libro),
    FOREIGN KEY (userid) REFERENCES userid(userid) ON DELETE CASCADE,
    FOREIGN KEY (libro) REFERENCES libri(titolo) ON DELETE CASCADE
);
```

---

### 3.6 Risoluzione Problemi Comuni

#### Problema: "java non riconosciuto"
**Soluzione:**
```bash
.\fix_java_version.bat
```
Questo script verifica e corregge i problemi di versione Java.

#### Problema: "PostgreSQL connection failed"
**Verifiche:**
1. PostgreSQL è installato e in esecuzione?
2. La password dell'utente 'postgres' è corretta?
3. Il servizio PostgreSQL è avviato?

#### Problema: "run_all.bat non si avvia"
**Da PowerShell:**
```powershell
.\run_all.bat
```

**Da CMD:**
```cmd
run_all.bat
```

#### Problema: Caratteri strani nell'output
Questo è normale in alcuni terminali Windows - il funzionamento non è compromesso.

---

## 4. Utilizzo dell'Applicazione

### 4.1 Registrazione 

### 4.2 Login

La funzione di login è essenziale per permettere agli utenti di accedere a funzionalità importanti, come creazione e la gestione delle librerie personali e la visualizzazione di suggerimenti personalizzati. Durante il login, agli utenti sarà richiesto di inserire il proprio UserID e Password che sono stati memorizzati durante la fase di registrazione. Se le credenziali inserite non corrispondono a quelle registrate nel sistema, l'utente verrà invitato al menu principale.

### 4.2.1 Recupero Password

Il sistema include una funzionalità di recupero password per gli utenti che hanno dimenticato le proprie credenziali:

**Caratteristiche del Recupero Password:**
- **Ricerca Utente** : Inserimento dell'username per trovare l'utente
- **Visualizzazione Informazioni** : Mostra nome, email e username dell'utente
- **Generazione Password Temporanea** : Crea una nuova password sicura di 12 caratteri
- **Sicurezza** : Password temporanea con mix di lettere maiuscole, minuscole, numeri e caratteri speciali

**Come Utilizzare:**
1. Dal menu principale, seleziona l'opzione "Recupera password"
2. Inserisci l'username dell'utente
3. Il sistema mostrerà le informazioni dell'utente se trovato
4. Scegli l'opzione per generare una nuova password temporanea
5. La nuova password verrà mostrata e salvata nel database
6. Al primo accesso bisognera combiare la password temporanea

**Note di Sicurezza:**
- Le password sono salvate in formato hash SHA-256
- Non è possibile recuperare la password originale
- Le password temporanee devono essere cambiate al prossimo login
- Conserva le password temporanee in modo sicuro

---

## 4. Esecuzione ed uso
• Estrazione dei file nella cartella compressa 
Per iniziare ad eseguire il programma, è necessario estrarre tutti i file contenuti nella cartella 
compressa chiamata BookRecommender: 
NOTA: È fondamentale, per un’esperienza migliore, prestare attenzione a quale cartella 
sceglierete come destinazione finale dei file estratti dalla cartella. Consigliamo di estrarre i file in 
una cartella facile da raggiungere, come la cartella "Download" o "Desktop", oppure di creare una 
nuova cartella dedicata per questo progetto. 

• Per iniziare, decidiamo in quale cartella andremo ad estrarre i file. Consigliamo di scegliere 
una cartella facilmente accessibile come "Download" o "Desktop", oppure di crearne una 
nuova appositamente dedicata al progetto, ad esempio chiamata "BookRecommender". 

• Successivamente, controlliamo se sul nostro dispositivo è presente un programma per 
aprire le cartelle compresse, come WinRAR o 7zip. Se questi programmi non sono 
installati, è possibile scaricarli dai seguenti link: WinRAR e 7zip. Di seguito, mostreremo i 
passaggi principali utilizzando WinRAR. 

• Infine, procediamo all'estrazione dei file. Per farlo, possiamo aprire l'archivio compresso 
con WinRAR e premere l'opzione "Estrai in..." nel menu in alto. Nella figura sottostante, è 
mostrato un esempio di come procedere: - 

Aprire l’archivio con WinRAR direttamente e premere l’opzione” Estrai in...” nel menu 
in alto. Nella foto un esempio:


### 4.1 Preparazione dell'ambiente

1. **Estrarre i file del progetto** 
Dopo aver scaricato il progetto, estrarlo dallo Zip in una cartella desiderata

2. **Configurare il database** 
Scaricare posgreSQL e impostare una password per la sicurezza e utilizzare uno dei metodi descritti della sezione 3

3. **Verificare la connessione** 
Dopo l'avvio del programma, e l'inserimento della password, verra effettueta una verifica di connessione al database in modo automatico

4. **Unizializzare il database** 
Esecuzione della classe DatabaseInitializer.java per inizializzare il database cioè, la creazione del database e di tutte le tabelle necessarie per il funzionamento del programma

4. **Trasferire libri nel database** 
Esecuzione della classe Trasferimento.java per la popolazione del database


### 4.2 Esecuzione del programma

#### Avvio del Server

1. **Avviare il registry RMI:**
```bash
start rmiregistry 1099
```

2. **Compilare il progetto:**
```bash
javac -d bin -cp "lib/*" src/bookrecommender/*.java
```

3. **Avviare il server:**
```bash
cd bin
java -cp ".;../lib/*" bookrecommender.Server
```

#### Avvio del Client

In un nuovo terminale:
```bash
cd bin
java -cp ".;../lib/*" bookrecommender.Client
```

### 4.3 Menu e funzioni principali

Il sistema BookRecommender offre un menu interattivo con le seguenti opzioni:

**Menu Principale:**
1. **Visualizza tutti i libri** - Mostra il catalogo completo
2. **Cerca libro per titolo** - Ricerca specifica per titolo
3. **Cerca libro per autore** - Ricerca per autore
4. **Cerca libro per autore e anno** - Ricerca avanzata per autore e anno
5. **Registrazione** - Creazione nuovo account
6. **Login** - Accesso al sistema
7. **Gestione Librerie** - Menu per le librerie personali
8. **Inserisci valutazione libro** - Valutazione multi-criteri
9. **Inserisci consiglio libro** - Suggerimenti di lettura
10. **Logout** - Disconnessione sicura
11. **Recupera password** - Recupero credenziali dimenticate
0. **Esci** - Uscita dal sistema

- **Visualizza tutti i libri**: Mostra l'intero catalogo con valutazioni e consigli
- **Ricerca per titolo**: Trova un libro specifico tramite il titolo
- **Ricerca per autore**: Trova tutti i libri di un autore specifico
- **Ricerca per autore e anno**: Trova libri di un autore in un anno specifico

#### 4.3.2 Registrazione

La funzione di registrazione permette ai nuovi utenti di creare un account. Ogni client riceve automaticamente un Session ID univoco.

**Dati richiesti:**
- Nome e cognome
- Codice fiscale (formato italiano)
- Email (formato valido)
- UserID (username univoco)
- Password (minimo 8 caratteri, con lettere e numeri)

#### 4.3.3 Login

La funzione di login è essenziale per accedere alle funzionalità avanzate. Il sistema verifica le credenziali e mantiene la sessione attiva per quel client specifico.

**Caratteristiche del sistema di sessioni:**
- Ogni client ha un Session ID univoco
- Le sessioni sono isolate tra client diversi
- Un utente può essere loggato su più client contemporaneamente
- Il logout chiude solo la sessione del client corrente

#### 4.3.4 Gestione delle Librerie

Gli utenti registrati possono:

- **Creare librerie personali**: Organizzare i libri preferiti
- **Aggiungere libri**: Inserire libri nelle proprie librerie
- **Rimuovere libri**: Eliminare libri dalle librerie
- **Visualizzare librerie**: Vedere il contenuto delle proprie librerie

#### 4.3.5 Inserimento delle Valutazioni dei Libri

Gli utenti registrati possono valutare i libri su 5 criteri (1-5):

- **Stile**: Valutazione dello stile di scrittura
- **Contenuto**: Qualità del contenuto
- **Gradevolezza**: Piacevolezza della lettura
- **Originalità**: Originalità dell'opera
- **Edizione**: Qualità dell'edizione

Il sistema calcola automaticamente la media delle valutazioni.

#### 4.3.6 Inserimento di Consigli di Libri

Gli utenti registrati possono consigliare libri ad altri utenti:

- **Libro referenziale**: Il libro per cui si fa la raccomandazione
- **Libri consigliati**: Fino a 3 libri consigliati (separati da virgola)
- **Condivisione**: I consigli sono visibili a tutti gli utenti

### 4.4 Uscita dal programma

- **Logout**: Chiude la sessione corrente del client
- **Esci**: Termina completamente l'applicazione

---

## 5. Troubleshooting

### Problemi comuni e soluzioni:

#### 5.1 Errori di configurazione del database

```
❌ Errore durante l'inizializzazione del database
```

**Soluzioni:**
- Verificare che PostgreSQL sia in esecuzione
- Controllare la password nel file `DatabaseInitializer.java`
- Verificare che il database 'bookrecommender' esista
- Assicurarsi che il driver JDBC sia nella cartella `lib/`

#### 5.2 Errori di connessione al database

```
❌ Errore di connessione al database
```

**Soluzioni:**
- Verificare che PostgreSQL sia in esecuzione
- Controllare la password nel file `BookRecommender.java`
- Verificare che il database 'bookrecommender' esista
- Controllare che la porta 5432 sia libera

#### 5.3 Errori RMI

```
java.rmi.ConnectException: Connection refused
```

**Soluzioni:**
- Verificare che il registry RMI sia avviato: `start rmiregistry 1099`
- Controllare che il server sia in esecuzione
- Verificare che la porta 1099 sia libera oppure cambiare porta

#### 5.4 Errori di compilazione

```
javac: command not found
```

**Soluzioni:**
- Verificare che Java sia installato: `java -version`
- Controllare le variabili d'ambiente PATH
- Installare Java se necessario

#### 5.5 Errori di sessione

```
❌ Devi essere loggato per...
```

**Soluzioni:**
- Effettuare il login con credenziali valide
- Verificare che la registrazione sia stata completata
- Controllare che il Session ID sia valido

#### 5.6 Errori di driver JDBC

```
❌ ClassNotFoundException: org.postgresql.Driver
```

**Soluzioni:**
- Scaricare il driver PostgreSQL da https://jdbc.postgresql.org/download/
- Posizionare il file `postgresql-*.jar` nella cartella `lib/`
- Verificare che il classpath includa la cartella `lib/`

### 5.7 Log di debug

Il sistema fornisce messaggi di errore dettagliati per facilitare il debugging. I log del server mostrano:
- Connessioni client
- Operazioni database
- Errori di sistema

### 5.8 Test di connessione

Per verificare la configurazione del database:

```bash
# Test di connessione
java -cp "bin;lib/*" -e "bookrecommender.DatabaseInitializer.testConnection()"

# Informazioni database
java -cp "bin;lib/*" -e "bookrecommender.DatabaseInitializer.showDatabaseInfo()"
``` 

---

## 6. Sitografia

- [Java RMI Documentation](https://docs.oracle.com/javase/tutorial/rmi/)
- [PostgreSQL Documentation](https://www.postgresql.org/docs/)
- [Java Download](https://www.oracle.com/it/java/technologies/downloads/)
- [Java Concurrency](https://docs.oracle.com/javase/tutorial/essential/concurrency/)
- [Java Database Connectivity](https://docs.oracle.com/javase/tutorial/jdbc/)
- [PostgreSQL JDBC Driver](https://jdbc.postgresql.org/)
- [Java Documentation](https://docs.oracle.com/en/java/)

---

## 7. Bibliografia

- "Java: The Complete Reference" - Herbert Schildt
- "Database System Concepts" - Abraham Silberschatz
- "Design Patterns" - Gang of Four
- "Clean Code" - Robert C. Martin
- "PostgreSQL: Up and Running" - Regina Obe
- "Java Performance" - Scott Oaks

---

**Versione del manuale:** 3.0  
**Data ultimo aggiornamento:** 08/2025  
**Compatibile con:** BookRecommender v3.0 (Sistema multi-sessione con DatabaseInitializer) 